AWSTemplateFormatVersion : 2010-09-09
Description: Serving a static website from S3 via CloudFront

Parameters:
  ParamDomainName:
    Type: String
    Description: The domain name for which we are going to host a website.
  AcmCertificateArn:
    Type: String
    Description: The ARN of an ACM certificate, which must belong in the us-east-1 region for CloudFront to be able to access.
  HostedZoneId:
    Type: String
    Description: The HostedZone Id where to create the DNS 'A' record which points the domain name to the CloudFront distribution.

Conditions:
  HasAcmCertificate: !Not [!Equals ['', !Ref AcmCertificateArn]]

Resources:

  OriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'Origin access identity for the CloudFront distribution'

  S3WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Join ["-", [!Ref ParamDomainName, "website"]]

  S3WebsiteBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    DependsOn:
      - S3WebsiteBucket
      - OriginAccessIdentity
    Properties:
      Bucket: !Ref S3WebsiteBucket
      PolicyDocument:
        Statement:
          - Sid: 'Granting least priviledge read access to cloudfront user'
            Effect: 'Allow'
            Action:
              - 's3:GetObject'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref S3WebsiteBucket, '/*' ]]
            Principal:
              AWS: !Join ['', ['arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ', !Ref 'OriginAccessIdentity']]

  S3CloudFrontLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Join ["-", [!Ref ParamDomainName, "cloudfront-logs"]]

  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    DependsOn:
      - S3WebsiteBucketPolicy
      - S3CloudFrontLogsBucket
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref ParamDomainName
        CacheBehaviors:
          - AllowedMethods:
              - HEAD
              - GET
              - OPTIONS
            CachedMethods:
              - HEAD
              - GET
            Compress: true
            DefaultTTL: 86400
            ForwardedValues:
              Cookies:
                Forward: all
              QueryString: true
            MaxTTL: 2629746
            MinTTL: 0
            PathPattern: '*'
            TargetOriginId: !Join ['-', [!Ref ParamDomainName, 's3-bucket']]
            ViewerProtocolPolicy : redirect-to-https
        CustomErrorResponses:
          - ErrorCachingMinTTL: 0
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCachingMinTTL: 0
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - HEAD
            - GET
            - OPTIONS
          CachedMethods:
            - HEAD
            - GET
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            Cookies:
              Forward: all
            QueryString: true
          MaxTTL: 2629746
          MinTTL: 0
          TargetOriginId: !Join ['-', [!Ref ParamDomainName, 's3-bucket']]
          TrustedSigners:
            - !Ref 'AWS::AccountId'
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: false
        Logging:
          Bucket: !GetAtt S3CloudFrontLogsBucket.DomainName
          IncludeCookies: true
          Prefix: !Join ['-', [!Ref ParamDomainName, 'cloudfront-logs']]
        Origins:
          - DomainName: !GetAtt S3WebsiteBucket.DomainName
            Id: !Join ['-', [!Ref ParamDomainName, 's3-bucket']]
            S3OriginConfig:
              OriginAccessIdentity: !Join ['', ['origin-access-identity/cloudfront/', !Ref OriginAccessIdentity]]
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !If [HasAcmCertificate, !Ref AcmCertificateArn, !Ref "AWS::NoValue"]
          MinimumProtocolVersion: TLSv1.2_2018
          SslSupportMethod: sni-only

  Route53ARecord:
    Type: AWS::Route53::RecordSetGroup
    DependsOn:
      - CloudFrontDistribution
    Properties:
      Comment: "Creates a DNS 'A' record to point the friendly domain name to the CloudFront distribution."
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Ref ParamDomainName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt CloudFrontDistribution.DomainName

Outputs:
  OutputOriginAccessIdentity:
    Description: The Origin Access Identity
    Export:
      Name: !Join ["", [!Ref 'AWS::StackName', 'OriginAccessIdentity']]
    Value: !Ref OriginAccessIdentity
  OriginAccessIdentityS3CanonicalUserId:
    Description: The Origin Access Identity S3CanonicalUserId
    Export:
      Name: !Join ["", [!Ref 'AWS::StackName', 'OriginAccessIdentityS3CanonicalUserId']]
    Value: !GetAtt OriginAccessIdentity.S3CanonicalUserId

  S3WebsiteBucketArn:
    Description: The ARN of the website S3 bucket
    Export:
      Name: !Join ["", [!Ref 'AWS::StackName', "S3WebsiteBucketArn"]]
    Value:  !GetAtt S3WebsiteBucket.Arn
  S3WebsiteBucketDomainName:
    Description: The DomainName of the website S3 bucket
    Export:
      Name: !Join ["", [!Ref 'AWS::StackName', "S3WebsiteBucketDomainName"]]
    Value:  !GetAtt S3WebsiteBucket.DomainName
  S3WebsiteBucketWebsiteURL:
    Description: The WebsiteURL of the website S3 bucket
    Export:
      Name: !Join ["", [!Ref 'AWS::StackName', "S3WebsiteBucketWebsiteURL"]]
    Value:  !GetAtt S3WebsiteBucket.WebsiteURL

  S3CloudFrontLogsBucketArn:
    Description: The ARN of the cloudfront logs S3 bucket
    Export:
      Name: !Join ["", [!Ref 'AWS::StackName', "S3CloudFrontLogsBucketArn"]]
    Value:  !GetAtt S3CloudFrontLogsBucket.Arn
  S3CloudFrontLogsBucketDomainName:
    Description: The DomainName of the cloudfront logs S3 bucket
    Export:
      Name: !Join ["", [!Ref 'AWS::StackName', "S3CloudFrontLogsBucketDomainName"]]
    Value:  !GetAtt S3CloudFrontLogsBucket.DomainName
  S3CloudFrontLogsBucketWebsiteURL:
    Description: The WebsiteURL of the cloudfront logs S3 bucket
    Export:
      Name: !Join ["", [!Ref 'AWS::StackName', "S3CloudFrontLogsBucketWebsiteURL"]]
    Value:  !GetAtt S3CloudFrontLogsBucket.WebsiteURL

  CloudFrontDistributionId:
    Description: The CloudFront distribution ID
    Export:
      Name: !Join ["", [!Ref 'AWS::StackName', 'CloudFrontDistribution']]
    Value: !Ref CloudFrontDistribution
  CloudFrontDistributionDomainName:
    Description: The CloudFront distribution DomainName
    Export:
      Name: !Join ["", [!Ref 'AWS::StackName', 'CloudFrontDistributionDomainName']]
    Value: !GetAtt CloudFrontDistribution.DomainName
