Description: >-
  Account management pipeline
AWSTemplateFormatVersion: 2010-09-09

Parameters: 
  RepositoryName: 
    Type: String
    Description: The name of the CodeCommit repository to create
  CodePipelineS3BucketName:
    Type: String
    Description: The name of the S3 bucket to create that will be used to store artifacts from CodePipeline execution runs.
  CloudFormationDeployActionRoleName:
    Type: String
    Description: The name of the IAM role that will be created to run the CloudFormation deployment action as.
  CodePipelineRoleName:
    Type: String
    Description: The name of the IAM role that will be created for the CodePipeline to use.
  CodePipelineName:
    Type: String
    Description: The name of the CodePipeline to create.
  StageAdministerPipelineStackName:
    Type: String
    Description: The name of this stack that is creating the pipeline. If the names do not match then the pipeline will not be able to update itself.
  StageAdministerAccountCapabilityIamStackName:
      Type: String
      Description: The name of the stack that is created to manage the IAM Policies/Roles/Groups capability.
  StageAdministerAccountCapabilityIamUsersStackName:
    Type: String
    Description: The name of the stack that is created to manage the IAM Users capability.

Resources:

  CodeCommitRepository:
    Type: 'AWS::CodeCommit::Repository'
    Properties:
      RepositoryName: !Ref RepositoryName
      RepositoryDescription: !Join [' ', [!Ref RepositoryName, 'CodeCommit Repository']]

  CodePipelineBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref CodePipelineS3BucketName

  CloudFormationDeployActionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'budgets:*'
                  - 'codebuild:*'
                  - 'codecommit:*'
                  - 'cloudformation:*'
                  - 'codepipeline:*'
                  - 'iam:*'
                  - 's3:*'
                Effect: Allow
                Resource: '*'
      RoleName: !Ref CloudFormationDeployActionRoleName 

  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ['codepipeline.amazonaws.com']
            Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              - Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive

                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild

                  - s3:*

                  - cloudformation:GetTemplate
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeStackResource
                  - cloudformation:DescribeStackResources
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack

                  - iam:PassRole
                Resource: '*'
                Effect: Allow
            Version: 2012-10-17
      RoleName: !Ref CodePipelineRoleName 

  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    DependsOn: 
      - CodePipelineRole
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineBucket
      Name: !Ref CodePipelineName
      RestartExecutionOnUpdate: true
      RoleArn: !Join ['', ['arn:aws:iam::',!Ref 'AWS::AccountId',':role/',!Ref CodePipelineRole]]
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name:  !Join ['', [!Ref RepositoryName, 'Source']]
              Configuration:
                BranchName: 'master'
                RepositoryName: !GetAtt CodeCommitRepository.Name
              RunOrder: 1
        - Name: 'AdministerPipeline'
          Actions:
            - Name: 'AdministerPipeline'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: REPLACE_ON_FAILURE 
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt [CloudFormationDeployActionRole, Arn]
                StackName: !Ref StageAdministerPipelineStackName
                TemplateConfiguration: !Join ['', [!Ref RepositoryName, 'Source', '::aws_seed.json']]
                TemplatePath: !Join ['', [!Ref RepositoryName, 'Source', '::aws_seed.yml']]
              InputArtifacts:
                - Name: !Join ['', [!Ref RepositoryName, 'Source']]
              RunOrder: 1
        - Name: 'AdministerAccount'
          Actions:
            - Name: 'Capability_Iam'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: REPLACE_ON_FAILURE 
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt [CloudFormationDeployActionRole, Arn]
                StackName: !Ref StageAdministerAccountCapabilityIamStackName
                TemplateConfiguration: !Join ['', [!Ref RepositoryName, 'Source', '::aws_capability_iam.json']]
                TemplatePath: !Join ['', [!Ref RepositoryName, 'Source', '::aws_capability_iam.yml']]
              InputArtifacts:
                - Name: !Join ['', [!Ref RepositoryName, 'Source']]
              RunOrder: 10
            - Name: 'Capability_Iam_Users'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: REPLACE_ON_FAILURE 
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt [CloudFormationDeployActionRole, Arn]
                StackName: !Ref StageAdministerAccountCapabilityIamUsersStackName
                TemplateConfiguration: !Join ['', [!Ref RepositoryName, 'Source', '::aws_capability_iam_users.json']]
                TemplatePath: !Join ['', [!Ref RepositoryName, 'Source', '::aws_capability_iam_users.yml']]
              InputArtifacts:
                - Name: !Join ['', [!Ref RepositoryName, 'Source']]
              RunOrder: 20

Outputs:
  CodeCommitRepositoryArn:
    Description: CodeCommit Arn
    Value: !GetAtt CodeCommitRepository.Arn
  CodeCommitRepositoryCloneUrlHttp:
    Description: CodeCommit CloneUrlHttp
    Value: !GetAtt CodeCommitRepository.CloneUrlHttp
  CodePipelineBucketArn:
    Description: CodePipeline S3 Bucket Arn
    Value: !GetAtt CodePipelineBucket.Arn
  CodePipelineBucketDomainName:
    Description: CodePipeline S3 Bucket DomainName
    Value: !GetAtt CodePipelineBucket.DomainName
  CodePipelineBucketWebsiteURL:
    Description: CodePipeline S3 Bucket WebsiteURL
    Value: !GetAtt CodePipelineBucket.WebsiteURL
  CloudFormationDeployActionRoleArn:
    Description: CloudFormationDeployActionRole Arn
    Value: !GetAtt CloudFormationDeployActionRole.Arn
  CodePipelineRoleArn:
    Description: CodePipelineRole Arn
    Value: !GetAtt CodePipelineRole.Arn
  CodePipelineName:
    Description: CodePipeline Name
    Value: !Ref CodePipeline
